{"ast":null,"code":"var _jsxFileName = \"/Users/florentluu/Documents/Leaflet-GeolocationMap/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport leafOrange from './assets/leaf-orange.png';\nimport leafShadow from './assets/leaf-shadow.png';\nimport { geolocated } from \"react-geolocated\";\nimport logo from './assets/logo.png';\nimport LocateControl from 'react-leaflet-locate-control';\nconst locateOptions = {\n  position: 'topright',\n  strings: {\n    title: 'Show me where I am, yo!'\n  },\n  onActivate: () => {} // callback before engine starts retrieving locations\n\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.orangeIcon = L.icon({\n      iconUrl: leafOrange,\n      shadowUrl: leafShadow,\n      iconSize: [38, 95],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [-3, -86]\n    });\n    this.state = {\n      ipPosition: null,\n      position: null,\n      ipUser: '',\n      orangeIcon: {\n        lat: '',\n        lng: ''\n      },\n      zoom: 13\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // componentWillMount() {\n  //   fetch('http://api.ipify.org?format=json?callback=?', {\n  //     method: 'GET',\n  //     headers: {},\n  //   })\n  //   .then(res => {\n  //     return res.text()\n  //   }).then(ip => { this.setState({ipUser: ip})\n  //     console.log('ip', ip)\n  //   });\n  // }\n  // componentDidMount() {\n  //   fetch(`http://ip-api.com/json/${this.state.ipUser}?fields=lat,lon`, {\n  //     method: 'GET',\n  //     headers: {},\n  //   })\n  //   .then(res => {\n  //     return res.text()\n  //   }).then(posIp => { this.setState({ipPosition: posIp})\n  //     console.log('ipPosition', this.state.ipPosition)\n  //   });\n  // }\n  // componentDidUpdate(){ console.log('COORD', this.state.orangeIcon)\n  //   if(this.state.orangeIcon.lat === '' || null) {\n  //   this.setState({orangeIcon: {lat:this.props.coords.latitude, lng:this.props.coords.longitude}})\n  //   }\n  // }\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n  // handleSubmit(event) {\n  //   alert('Message envoy√©: '+ this.state.value);\n  //   event.preventDefault();\n  // }\n\n\n  render() {\n    const positionOrangeIcon = [this.state.orangeIcon.lat, this.state.orangeIcon.lng];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      center: positionOrangeIcon,\n      zoom: this.state.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(LocateControl, {\n      options: locateOptions,\n      startDirectly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), !this.props.isGeolocationAvailable ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Your browser does not support Geolocation\") : !this.props.isGeolocationEnabled ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Geolocation is not enabled\") : this.props.coords ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"container-form\",\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logodiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"VILLA BALI MANAGEMENT\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contactform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      className: \"text-primary\",\n      onChange: this.handleChange.bind(this, 'name'),\n      placeholder: \"Lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.firstname,\n      className: \"text-primary\",\n      onChange: this.handleChange.bind(this, 'firstname'),\n      placeholder: \"Firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"ip\",\n      value: this.state.ipUser,\n      className: \"text-primary\",\n      onChange: this.handleChange.bind(this, 'ipUser'),\n      placeholder: \"ip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"checkIn\",\n      value: this.state.checkIn,\n      className: \"text-primary\",\n      onChange: this.handleChange.bind(this, 'checkIn'),\n      placeholder: \"Check-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Check-out\",\n      name: \"checkOut\",\n      className: \"text-primary\",\n      value: this.state.checkOut,\n      onChange: this.handleChange.bind(this, 'checkOut'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Latitude\",\n      name: \"latitude\",\n      className: \"text-primary\",\n      value: this.props.coords.latitude,\n      onChange: this.handleChange.bind(this, 'order'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"longitude\",\n      value: this.props.coords.longitude,\n      className: \"text-primary\",\n      onChange: this.handleChange.bind(this, 'email'),\n      placeholder: \"Longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"text-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"text-primary\",\n      type: \"text\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.handleChange.bind(this, 'message'),\n      placeholder: \"Your message...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-send\",\n      type: \"submit\",\n      onClick: () => this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Valider\"))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Getting the location data\\u2026 \"));\n  }\n\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 7000\n})(App);","map":{"version":3,"sources":["/Users/florentluu/Documents/Leaflet-GeolocationMap/src/App.js"],"names":["React","L","Map","TileLayer","Marker","Popup","leafOrange","leafShadow","geolocated","logo","LocateControl","locateOptions","position","strings","title","onActivate","App","Component","constructor","props","orangeIcon","icon","iconUrl","shadowUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","state","ipPosition","ipUser","lat","lng","zoom","handleChange","bind","handleSubmit","render","positionOrangeIcon","isGeolocationAvailable","isGeolocationEnabled","coords","name","firstname","checkIn","checkOut","latitude","longitude","message","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport leafOrange from './assets/leaf-orange.png';\nimport leafShadow from './assets/leaf-shadow.png';\nimport { geolocated } from \"react-geolocated\";\nimport logo from './assets/logo.png';\n\nimport LocateControl from 'react-leaflet-locate-control'\n\nconst locateOptions = {\n  position: 'topright',\n  strings: {\n      title: 'Show me where I am, yo!'\n  },\n  onActivate: () => {} // callback before engine starts retrieving locations\n}\nclass App extends React.Component {\n  constructor(props){\n  super(props)\n  this.state = {\n    ipPosition: null,\n    position: null,\n    ipUser: '',\n    orangeIcon: {\n      lat: '',\n      lng: '',\n    },\n    zoom: 13\n  }\n  this.handleChange = this.handleChange.bind(this);\n  this.handleSubmit= this.handleSubmit.bind(this)\n  }\n\n  \n  // componentWillMount() {\n  //   fetch('http://api.ipify.org?format=json?callback=?', {\n  //     method: 'GET',\n  //     headers: {},\n  //   })\n  //   .then(res => {\n  //     return res.text()\n  //   }).then(ip => { this.setState({ipUser: ip})\n  //     console.log('ip', ip)\n  //   });\n  // }\n\n  // componentDidMount() {\n  //   fetch(`http://ip-api.com/json/${this.state.ipUser}?fields=lat,lon`, {\n  //     method: 'GET',\n  //     headers: {},\n  //   })\n  //   .then(res => {\n  //     return res.text()\n  //   }).then(posIp => { this.setState({ipPosition: posIp})\n  //     console.log('ipPosition', this.state.ipPosition)\n  //   });\n  // }\n\n  // componentDidUpdate(){ console.log('COORD', this.state.orangeIcon)\n  //   if(this.state.orangeIcon.lat === '' || null) {\n  //   this.setState({orangeIcon: {lat:this.props.coords.latitude, lng:this.props.coords.longitude}})\n  //   }\n  // }\n\n  // handleChange(event) {\n  //   this.setState({value: event.target.value});\n  // }\n\n  // handleSubmit(event) {\n  //   alert('Message envoy√©: '+ this.state.value);\n  //   event.preventDefault();\n  // }\n\n  orangeIcon = L.icon({\n    iconUrl: leafOrange,\n    shadowUrl: leafShadow,\n    iconSize:     [38, 95], // size of the icon\n    shadowSize:   [50, 64], // size of the shadow\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\n    shadowAnchor: [4, 62],  // the same for the shadow\n    popupAnchor:  [-3, -86]\n  });\n\n  \n  render(){\n    const positionOrangeIcon = [this.state.orangeIcon.lat, this.state.orangeIcon.lng];\n    \n    return (\n      <div>\n        <Map className=\"map\" center={positionOrangeIcon} zoom={this.state.zoom}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {/* <Marker position={positionOrangeIcon} icon={this.orangeIcon}>\n          <Popup>\n            I am an orange leaf\n          </Popup>\n        </Marker> */}\n        <LocateControl options={locateOptions} startDirectly/>\n      </Map>\n        {\n        !this.props.isGeolocationAvailable ? (\n            <div>Your browser does not support Geolocation</div>\n        ) : !this.props.isGeolocationEnabled ? (\n            <div>Geolocation is not enabled</div>\n        ) : this.props.coords ? ( \n\n        <div>  \n          <form className=\"container-form\" onSubmit={this.handleSubmit.bind(this)}>\n            <div className='logodiv'>\n              VILLA BALI MANAGEMENT\n              <br/>\n              <img src={logo} alt=\"Logo\" className='logo'/>\n            </div>\n            <div className=\"contactform\">\n                \n                <div className=\"form1\">\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.name}\n                    className=\"text-primary\"\n                    onChange={this.handleChange.bind(this, 'name')}\n                    placeholder=\"Lastname\"\n                  />\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.firstname}\n                    className=\"text-primary\"\n                    onChange={this.handleChange.bind(this, 'firstname')}\n                    placeholder=\"Firstname\"\n                  /><input\n                  type=\"text\"\n                  name=\"ip\"\n                  value={this.state.ipUser}\n                  className=\"text-primary\"\n                  onChange={this.handleChange.bind(this, 'ipUser')}\n                  placeholder=\"ip\"\n                />\n                </div>\n                <div className=\"form2\">\n                  <input\n                    type=\"text\"\n                    name=\"checkIn\"\n                    value={this.state.checkIn}\n                    className=\"text-primary\"\n                    onChange={this.handleChange.bind(this, 'checkIn')}\n                    placeholder=\"Check-in\"\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Check-out\"\n                    name=\"checkOut\"\n                    className=\"text-primary\"\n                    value={this.state.checkOut}\n                    onChange={this.handleChange.bind(this, 'checkOut')}\n                  />\n                </div>\n                <div className=\"form3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Latitude\"\n                    name=\"latitude\"\n                    className=\"text-primary\"\n                    value={this.props.coords.latitude}\n                    onChange={this.handleChange.bind(this, 'order')}\n                  />\n                  <input\n                    type=\"text\"\n                    name=\"longitude\"\n                    value={this.props.coords.longitude}\n                    className=\"text-primary\"\n                    onChange={this.handleChange.bind(this, 'email')}\n                    placeholder=\"Longitude\"\n                  />\n                </div>\n              </div>\n                <div className=\"text-button\">\n                  <textarea\n                    className=\"text-primary\"\n                    type=\"text\"\n                    name=\"message\"\n                    value={this.state.message}\n                    onChange={this.handleChange.bind(this, 'message')}\n                    placeholder=\"Your message...\"\n                  />\n                  <div className=\"buttons-container\">\n                    <button\n                      className=\"button-send\"\n                      type=\"submit\"\n                      onClick={() => this.handleSubmit.bind(this)}\n                    >\n                      Valider\n                    </button>\n                  </div>\n            </div>\n          </form> \n        </div>\n        \n        ) : (\n        <div>Getting the location data&hellip; </div>)}\n      </div>\n    );\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n      enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 7000,\n})(App);\n"]},"metadata":{},"sourceType":"module"}